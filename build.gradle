buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
	id 'java'
	id 'maven-publish'
	id 'jacoco'
	id 'org.sonarqube' version '3.0'
	id 'com.github.kt3k.coveralls' version '2.10.2'
	id 'com.palantir.jacoco-coverage' version '0.4.0'
    id 'io.codearte.nexus-staging' version '0.30.0'
}
apply plugin: 'com.bmuschko.nexus'

sourceCompatibility = 1.7
targetCompatibility = 1.7
group = "io.github.devatherock"
version = '1.2.0' + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")

repositories {
	mavenCentral()
}

project.ext.jsonSimpleVersion = '1.1.1'
project.ext.gsonVersion = '2.8.5'
project.ext.jacksonVersion = '2.9.7'

dependencies {
	compileOnly group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonSimpleVersion
	compileOnly group: 'com.google.code.gson', name: 'gson', version: gsonVersion
	compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion

	testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Configurations for tests
configurations {
	jsonSimpleTestCompile.extendsFrom testCompile
	jsonSimpleTestCompileOnly.extendsFrom compileOnly
	gsonTestCompile.extendsFrom testCompile
	gsonTestCompileOnly.extendsFrom compileOnly
	jacksonTestCompile.extendsFrom testCompile
	jacksonTestCompileOnly.extendsFrom compileOnly
	customJsonTestCompile.extendsFrom testCompile
	customJsonTestCompileOnly.extendsFrom compileOnly
}

// sourceSets for tests
sourceSets {
	jsonSimpleTest {
		java {
			srcDirs = [
				"$projectDir/src/main/java",
				"$projectDir/src/test/java"
			]
			exclude '**/GSONFormatterTest.java'
			exclude '**/JacksonFormatterTest.java'
			exclude '**/CustomJsonConverterTest.java'
			exclude '**/CustomKeysTest.java'
		}
		resources.srcDir file('src/test/resources')
	}

	gsonTest {
		java {
			srcDirs = [
				"$projectDir/src/main/java",
				"$projectDir/src/test/java"
			]
			exclude '**/JSONSimpleFormatterTest.java'
			exclude '**/JacksonFormatterTest.java'
			exclude '**/CustomJsonConverterTest.java'
			exclude '**/CustomKeysTest.java'
		}
		resources.srcDir file('src/test/resources')
	}

	jacksonTest {
		java {
			srcDirs = [
				"$projectDir/src/main/java",
				"$projectDir/src/test/java"
			]
			exclude '**/JSONSimpleFormatterTest.java'
			exclude '**/GSONFormatterTest.java'
			exclude '**/CustomJsonConverterTest.java'
		}
		resources.srcDir file('src/test/resources')
	}

	customJsonTest {
		java {
			srcDirs = [
				"$projectDir/src/main/java",
				"$projectDir/src/test/java"
			]
			exclude '**/JSONSimpleFormatterTest.java'
			exclude '**/GSONFormatterTest.java'
			exclude '**/JacksonFormatterTest.java'
			exclude '**/CustomKeysTest.java'
		}
		resources.srcDir file('src/test/resources')
	}
}

// Test configuration dependencies
dependencies {
	jsonSimpleTestCompile group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonSimpleVersion
	gsonTestCompile group: 'com.google.code.gson', name: 'gson', version: gsonVersion
	jacksonTestCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
}

/** Test tasks **/
task jsonSimpleTest(type: Test) {
	description = "Test json-simple"
	testClassesDirs = project.sourceSets.jsonSimpleTest.output.classesDirs
	classpath = project.sourceSets.jsonSimpleTest.runtimeClasspath
}

task gsonTest(type: Test) {
	description = "Test gson"
	testClassesDirs = project.sourceSets.gsonTest.output.classesDirs
	classpath = project.sourceSets.gsonTest.runtimeClasspath
}

task jacksonTest(type: Test) {
	description = "Test jackson"
	testClassesDirs = project.sourceSets.jacksonTest.output.classesDirs
	classpath = project.sourceSets.jacksonTest.runtimeClasspath
}

task customJsonTest(type: Test) {
	description = "Test custom JSON"
	testClassesDirs = project.sourceSets.customJsonTest.output.classesDirs
	classpath = project.sourceSets.customJsonTest.runtimeClasspath
}

apply from: 'publish.gradle'
apply from: 'checks.gradle'