work_directory: &work_directory
  working_directory: ~/jul-jsonformatter

resource_class: &resource_class
  resource_class: small

release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/  
  
pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

orbs:
  templates: devatherock/circleci-templates@0.7.0      
  
executors:
  jdk-executor:
    docker:
      - image: cimg/openjdk:17.0.11
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  build:
    parameters:
      command_args:
        type: string
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/jul-jsonformatter
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run:
          name: run commands
          no_output_timeout: 60m
          command: ./gradlew << parameters.command_args >>
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results

  publish:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/jul-jsonformatter
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew build publishToSonatype closeAndReleaseSonatypeStagingRepository -x check         
           
workflows:
  version: 2.1
  build_test:
    jobs:
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          filters:
            branches:
              only: master
      - build:
          context:
            - docker-credentials
            - sonatype-credentials
            - sonar-credentials
          command_args: 'build publishToSonatype coveralls sonar -Dsnapshot=true -Dsonar.token=$SONAR_TOKEN -x test'
          requires:
            - notify

  publish_artifacts:
    jobs:
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
      - publish:
          context:
            - docker-credentials
            - sonatype-credentials
          <<: *release_filter  
          requires:
            - notify

  pr_check:
    jobs:
      - templates/changelog_updater:
          name: changelog_updater
          context:
            - docker-credentials
            - changelog-updater-credentials
          <<: *pr_filter
      - build:
          name: test
          context:
            - docker-credentials
            - sonar-credentials
          command_args: 'check coveralls sonar -Dsonar.token=$SONAR_TOKEN -x test'
          <<: *pr_filter
          requires:
            - changelog_updater